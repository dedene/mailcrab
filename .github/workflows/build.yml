name: Build

on:
  push:
    branches: ['main']

jobs:
  frontend:
    name: Build frontend assets
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v3
      - run: rustup toolchain install stable --profile minimal
      - run: rustup target add wasm32-unknown-unknown
      - uses: jetli/trunk-action@v0.4.0
        with:
          version: 'v0.16.0'

      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            frontend/target/
          key: frontend-${{ hashFiles('frontend/Cargo.toml') }}
          restore-keys: frontend-

      - name: Build frontend
        run: trunk build
        working-directory: frontend

      - uses: actions/upload-artifact@v3
        with:
          name: frontend-build-${{ github.sha }}
          path: frontend/dist

  build:
    name: Binaries for ${{ matrix.name }}
    needs: frontend
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        name:
          - linux-x86-64-gnu
          - linux-arm64-gnu
        include:
          - name: linux-x86-64-gnu
            os: ubuntu-20.04
            target: x86_64-unknown-linux-gnu
            platform: ~
            cross: false

          - name: linux-arm64-gnu
            os: ubuntu-20.04
            target: aarch64-unknown-linux-gnu
            platform: ~
            cross: true

    steps:
      - uses: actions/checkout@v3
      - run: rustup toolchain install stable --profile minimal

      - uses: actions/download-artifact@v3
        with:
          name: frontend-build-${{ github.sha }}
          path: frontend/dist

      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            backend/target/
          key: backend-${{ matrix.name }}-${{ hashFiles('backend/Cargo.toml') }}
          restore-keys: backend-${{ matrix.name }}-

      - run: cargo install cross --git https://github.com/cross-rs/cross || true

      - name: Build
        if: ${{ !matrix.cross }}
        run:
          cargo build --release --locked --target ${{ matrix.target }} --manifest-path
          backend/Cargo.toml

      - name: Cross build
        if: ${{ matrix.cross }}
        run:
          cross build --release --locked --target ${{ matrix.target }} --manifest-path
          backend/Cargo.toml

      - name: Copy binaries
        if: ${{ matrix.platform == null }}
        shell: bash
        run: |
          mkdir -p bin
          src="backend/target/${{ matrix.target }}/release/mailcrab-backend"
          dst="bin/mailcrab-${{ matrix.name }}-${{ github.ref_name }}"
          cp "$src" "$dst"
          sha256sum -b "$dst" > "$dst.sha256"

      - name: Copy binary
        if: ${{ matrix.platform != null }}
        run:
          mkdir -p bin && cp backend/target/${{ matrix.target }}/release/mailcrab-backend bin/${{
          matrix.platform }}

      - uses: actions/upload-artifact@v3
        if: ${{ matrix.platform != null }}
        with:
          name: ${{ matrix.platform }}-build-${{ github.ref_name }}
          path: bin/${{ matrix.platform }}
